"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6856],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>c});var n=a(7294);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var o=n.createContext({}),p=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},d=function(e){var t=p(e.components);return n.createElement(o.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var a=e.components,l=e.mdxType,i=e.originalType,o=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),h=p(a),c=l,k=h["".concat(o,".").concat(c)]||h[c]||u[c]||i;return a?n.createElement(k,r(r({ref:t},d),{},{components:a})):n.createElement(k,r({ref:t},d))}));function c(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var i=a.length,r=new Array(i);r[0]=h;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s.mdxType="string"==typeof e?e:l,r[1]=s;for(var p=2;p<i;p++)r[p]=a[p];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}h.displayName="MDXCreateElement"},1006:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>r,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var n=a(7462),l=(a(7294),a(3905));const i={id:"valhalla.ValhallaCostingOptsBicycle",title:"Interface: ValhallaCostingOptsBicycle",sidebar_label:"ValhallaCostingOptsBicycle",custom_edit_url:null},r=void 0,s={unversionedId:"api/interfaces/valhalla.ValhallaCostingOptsBicycle",id:"api/interfaces/valhalla.ValhallaCostingOptsBicycle",title:"Interface: ValhallaCostingOptsBicycle",description:"valhalla.ValhallaCostingOptsBicycle",source:"@site/docs/api/interfaces/valhalla.ValhallaCostingOptsBicycle.md",sourceDirName:"api/interfaces",slug:"/api/interfaces/valhalla.ValhallaCostingOptsBicycle",permalink:"/routingjs/docs/api/interfaces/valhalla.ValhallaCostingOptsBicycle",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"valhalla.ValhallaCostingOptsBicycle",title:"Interface: ValhallaCostingOptsBicycle",sidebar_label:"ValhallaCostingOptsBicycle",custom_edit_url:null},sidebar:"tutorialSidebar",previous:{title:"ValhallaCostingOptsAuto",permalink:"/routingjs/docs/api/interfaces/valhalla.ValhallaCostingOptsAuto"},next:{title:"ValhallaCostingOptsMotorcycle",permalink:"/routingjs/docs/api/interfaces/valhalla.ValhallaCostingOptsMotorcycle"}},o={},p=[{value:"Hierarchy",id:"hierarchy",level:2},{value:"Properties",id:"properties",level:2},{value:"avoid_bad_surfaces",id:"avoid_bad_surfaces",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"bicycle_type",id:"bicycle_type",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"bss_return_cost",id:"bss_return_cost",level:3},{value:"Defined in",id:"defined-in-2",level:4},{value:"bss_return_penalty",id:"bss_return_penalty",level:3},{value:"Defined in",id:"defined-in-3",level:4},{value:"country_crossing_cost",id:"country_crossing_cost",level:3},{value:"Inherited from",id:"inherited-from",level:4},{value:"Defined in",id:"defined-in-4",level:4},{value:"country_crossing_penalty",id:"country_crossing_penalty",level:3},{value:"Inherited from",id:"inherited-from-1",level:4},{value:"Defined in",id:"defined-in-5",level:4},{value:"cycling_speed",id:"cycling_speed",level:3},{value:"Defined in",id:"defined-in-6",level:4},{value:"gate_cost",id:"gate_cost",level:3},{value:"Inherited from",id:"inherited-from-2",level:4},{value:"Defined in",id:"defined-in-7",level:4},{value:"gate_penalty",id:"gate_penalty",level:3},{value:"Inherited from",id:"inherited-from-3",level:4},{value:"Defined in",id:"defined-in-8",level:4},{value:"maneuver_penalty",id:"maneuver_penalty",level:3},{value:"Inherited from",id:"inherited-from-4",level:4},{value:"Defined in",id:"defined-in-9",level:4},{value:"service_penalty",id:"service_penalty",level:3},{value:"Inherited from",id:"inherited-from-5",level:4},{value:"Defined in",id:"defined-in-10",level:4},{value:"shortest",id:"shortest",level:3},{value:"Inherited from",id:"inherited-from-6",level:4},{value:"Defined in",id:"defined-in-11",level:4},{value:"use_ferry",id:"use_ferry",level:3},{value:"Inherited from",id:"inherited-from-7",level:4},{value:"Defined in",id:"defined-in-12",level:4},{value:"use_hills",id:"use_hills",level:3},{value:"Defined in",id:"defined-in-13",level:4},{value:"use_living_streets",id:"use_living_streets",level:3},{value:"Inherited from",id:"inherited-from-8",level:4},{value:"Defined in",id:"defined-in-14",level:4},{value:"use_roads",id:"use_roads",level:3},{value:"Defined in",id:"defined-in-15",level:4}],d={toc:p};function u(e){let{components:t,...a}=e;return(0,l.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/routingjs/docs/api/modules/valhalla"},"valhalla"),".ValhallaCostingOptsBicycle"),(0,l.kt)("h2",{id:"hierarchy"},"Hierarchy"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"ValhallaCostingOptsWheels")),(0,l.kt)("p",{parentName:"li"},"\u21b3 ",(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"strong"},"ValhallaCostingOptsBicycle"))))),(0,l.kt)("h2",{id:"properties"},"Properties"),(0,l.kt)("h3",{id:"avoid_bad_surfaces"},"avoid","_","bad","_","surfaces"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,l.kt)("strong",{parentName:"p"},"avoid","_","bad","_","surfaces"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"This value is meant to represent how much a cyclist wants to avoid roads with poor surfaces\nrelative to the bicycle type being used. This is a range of values between 0 and 1. When the\nvalue is 0, there is no penalization of roads with different surface types; only bicycle speed\non each surface is taken into account. As the value approaches 1, roads with poor surfaces for\nthe bike are penalized heavier so that they are only taken if they significantly\nimprove travel time. When the value is equal to 1, all bad surfaces are completely disallowed\nfrom routing, including start and end points."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"strong"},"Default Value"))),(0,l.kt)("p",null,"The default value is 0.25."),(0,l.kt)("h4",{id:"defined-in"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/gis-ops/routingjs/blob/b19e7dc/packages/valhalla/parameters.ts#L1133"},"packages/valhalla/parameters.ts:1133")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"bicycle_type"},"bicycle","_","type"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,l.kt)("strong",{parentName:"p"},"bicycle","_","type"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"ValhallaBicycleType")),(0,l.kt)("p",null,"The type of bicycle."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"strong"},"Default Value"))),(0,l.kt)("p",null,"The default type is Hybrid."),(0,l.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/gis-ops/routingjs/blob/b19e7dc/packages/valhalla/parameters.ts#L1081"},"packages/valhalla/parameters.ts:1081")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"bss_return_cost"},"bss","_","return","_","cost"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,l.kt)("strong",{parentName:"p"},"bss","_","return","_","cost"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"This value is useful when bikeshare is chosen as travel mode. It is meant to give the time\nwill be used to return a rental bike. This value will be displayed in the final directions\nand used to calculate the whole duation."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"strong"},"Default Value"))),(0,l.kt)("p",null,"The default value is 120 seconds."),(0,l.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/gis-ops/routingjs/blob/b19e7dc/packages/valhalla/parameters.ts#L1142"},"packages/valhalla/parameters.ts:1142")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"bss_return_penalty"},"bss","_","return","_","penalty"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,l.kt)("strong",{parentName:"p"},"bss","_","return","_","penalty"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"This value is useful when bikeshare is chosen as travel mode. It is meant to describe the\npotential effort to return a rental bike. This value won't be displayed and used only\ninside of the algorithm."),(0,l.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/gis-ops/routingjs/blob/b19e7dc/packages/valhalla/parameters.ts#L1148"},"packages/valhalla/parameters.ts:1148")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"country_crossing_cost"},"country","_","crossing","_","cost"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,l.kt)("strong",{parentName:"p"},"country","_","crossing","_","cost"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"A cost applied when encountering an international border. This cost is added to the\nestimated and elapsed times."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"strong"},"Default Value"))),(0,l.kt)("p",null,"The default cost is 600 seconds."),(0,l.kt)("h4",{id:"inherited-from"},"Inherited from"),(0,l.kt)("p",null,"ValhallaCostingOptsWheels.country","_","crossing","_","cost"),(0,l.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/gis-ops/routingjs/blob/b19e7dc/packages/valhalla/parameters.ts#L746"},"packages/valhalla/parameters.ts:746")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"country_crossing_penalty"},"country","_","crossing","_","penalty"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,l.kt)("strong",{parentName:"p"},"country","_","crossing","_","penalty"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"A penalty applied for a country crossing. This penalty can be used to create paths that\navoid spanning country boundaries."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"strong"},"Default Value"))),(0,l.kt)("p",null,"The default penalty is 0."),(0,l.kt)("h4",{id:"inherited-from-1"},"Inherited from"),(0,l.kt)("p",null,"ValhallaCostingOptsWheels.country","_","crossing","_","penalty"),(0,l.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/gis-ops/routingjs/blob/b19e7dc/packages/valhalla/parameters.ts#L754"},"packages/valhalla/parameters.ts:754")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"cycling_speed"},"cycling","_","speed"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,l.kt)("strong",{parentName:"p"},"cycling","_","speed"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"Cycling speed is the average travel speed along smooth, flat roads. This is meant to be the\nspeed a rider can comfortably maintain over the desired distance of the route."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"strong"},"Remarks"))),(0,l.kt)("p",null,"It can be modified (in the costing method) by surface type in conjunction with bicycle type\nand (coming soon) by hilliness of the road section. When no speed is specifically provided,\nthe default speed is determined by the bicycle type and are as follows:\nRoad = 25 KPH (15.5 MPH), Cross = 20 KPH (13 MPH), Hybrid/City = 18 KPH (11.5 MPH), and\nMountain = 16 KPH (10 MPH)."),(0,l.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/gis-ops/routingjs/blob/b19e7dc/packages/valhalla/parameters.ts#L1093"},"packages/valhalla/parameters.ts:1093")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"gate_cost"},"gate","_","cost"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,l.kt)("strong",{parentName:"p"},"gate","_","cost"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("h4",{id:"inherited-from-2"},"Inherited from"),(0,l.kt)("p",null,"ValhallaCostingOptsWheels.gate","_","cost"),(0,l.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/gis-ops/routingjs/blob/b19e7dc/packages/valhalla/parameters.ts#L737"},"packages/valhalla/parameters.ts:737")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"gate_penalty"},"gate","_","penalty"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,l.kt)("strong",{parentName:"p"},"gate","_","penalty"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("h4",{id:"inherited-from-3"},"Inherited from"),(0,l.kt)("p",null,"ValhallaCostingOptsWheels.gate","_","penalty"),(0,l.kt)("h4",{id:"defined-in-8"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/gis-ops/routingjs/blob/b19e7dc/packages/valhalla/parameters.ts#L738"},"packages/valhalla/parameters.ts:738")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"maneuver_penalty"},"maneuver","_","penalty"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,l.kt)("strong",{parentName:"p"},"maneuver","_","penalty"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("h4",{id:"inherited-from-4"},"Inherited from"),(0,l.kt)("p",null,"ValhallaCostingOptsWheels.maneuver","_","penalty"),(0,l.kt)("h4",{id:"defined-in-9"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/gis-ops/routingjs/blob/b19e7dc/packages/valhalla/parameters.ts#L736"},"packages/valhalla/parameters.ts:736")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"service_penalty"},"service","_","penalty"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,l.kt)("strong",{parentName:"p"},"service","_","penalty"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"A penalty applied for transition to generic service road. The default penalty is 0 for\ntrucks and 15 for cars, buses, motor scooters and motorcycles."),(0,l.kt)("h4",{id:"inherited-from-5"},"Inherited from"),(0,l.kt)("p",null,"ValhallaCostingOptsWheels.service","_","penalty"),(0,l.kt)("h4",{id:"defined-in-10"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/gis-ops/routingjs/blob/b19e7dc/packages/valhalla/parameters.ts#L719"},"packages/valhalla/parameters.ts:719")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"shortest"},"shortest"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,l.kt)("strong",{parentName:"p"},"shortest"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"boolean")),(0,l.kt)("p",null,"Changes the metric to quasi-shortest, i.e. purely distance-based costing."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"strong"},"Remarks"))),(0,l.kt)("p",null,"Note, this will disable all other costings & penalties. Also note, shortest will not\ndisable hierarchy pruning, leading to potentially sub-optimal routes for some costing\nmodels."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"strong"},"Default Value"))),(0,l.kt)("p",null,"The default is false."),(0,l.kt)("h4",{id:"inherited-from-6"},"Inherited from"),(0,l.kt)("p",null,"ValhallaCostingOptsWheels.shortest"),(0,l.kt)("h4",{id:"defined-in-11"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/gis-ops/routingjs/blob/b19e7dc/packages/valhalla/parameters.ts#L732"},"packages/valhalla/parameters.ts:732")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"use_ferry"},"use","_","ferry"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,l.kt)("strong",{parentName:"p"},"use","_","ferry"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"This value indicates the willingness to take ferries. This is a range of values\nbetween 0 and 1. Values near 0 attempt to avoid ferries and values near 1 will favor ferries."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"strong"},"Default Value"))),(0,l.kt)("p",null,"The default value is 0.5."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"strong"},"Remarks"))),(0,l.kt)("p",null,"Note that sometimes ferries are required to complete a route so values of 0 are not guaranteed to avoid ferries entirely."),(0,l.kt)("h4",{id:"inherited-from-7"},"Inherited from"),(0,l.kt)("p",null,"ValhallaCostingOptsWheels.use","_","ferry"),(0,l.kt)("h4",{id:"defined-in-12"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/gis-ops/routingjs/blob/b19e7dc/packages/valhalla/parameters.ts#L700"},"packages/valhalla/parameters.ts:700")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"use_hills"},"use","_","hills"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,l.kt)("strong",{parentName:"p"},"use","_","hills"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"A cyclist's desire to tackle hills in their routes. This is a range of values from 0 to 1,\nwhere 0 attempts to avoid hills and steep grades even if it means a longer (time and distance)\npath, while 1 indicates the rider does not fear hills and steeper grades. Based on the\nuse_hills factor, penalties are applied to roads based on elevation change and grade. These\npenalties help the path avoid hilly roads in favor of flatter roads or less steep grades where\navailable. Note that it is not always possible to find alternate paths to avoid\nhills (for example when route locations are in mountainous areas)."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"strong"},"Default Value"))),(0,l.kt)("p",null,"The default value is 0.5."),(0,l.kt)("h4",{id:"defined-in-13"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/gis-ops/routingjs/blob/b19e7dc/packages/valhalla/parameters.ts#L1120"},"packages/valhalla/parameters.ts:1120")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"use_living_streets"},"use","_","living","_","streets"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,l.kt)("strong",{parentName:"p"},"use","_","living","_","streets"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"This value indicates the willingness to take living streets. This is a range of values\nbetween 0 and 1. Values near 0 attempt to avoid living streets and values near 1 will\nfavor living streets."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"strong"},"Default Value"))),(0,l.kt)("p",null,"The default value is 0 for trucks, 0.1 for cars, buses, motor\nscooters and motorcycles."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"strong"},"Remarks"))),(0,l.kt)("p",null,"Note that sometimes living streets are required to complete\na route so values of 0 are not guaranteed to avoid living streets entirely."),(0,l.kt)("h4",{id:"inherited-from-8"},"Inherited from"),(0,l.kt)("p",null,"ValhallaCostingOptsWheels.use","_","living","_","streets"),(0,l.kt)("h4",{id:"defined-in-14"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/gis-ops/routingjs/blob/b19e7dc/packages/valhalla/parameters.ts#L714"},"packages/valhalla/parameters.ts:714")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"use_roads"},"use","_","roads"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,l.kt)("strong",{parentName:"p"},"use","_","roads"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"A cyclist's propensity to use roads alongside other vehicles. This is a range of values\nfrom 0 to 1, where 0 attempts to avoid roads and stay on cycleways and paths, and 1 indicates\nthe rider is more comfortable riding on roads."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"strong"},"Remarks"))),(0,l.kt)("p",null,"Based on the use_roads factor, roads with\ncertain classifications and higher speeds are penalized in an attempt to avoid them when\nfinding the best path."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"strong"},"Default Value"))),(0,l.kt)("p",null,"The default value is 0.5."),(0,l.kt)("h4",{id:"defined-in-15"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/gis-ops/routingjs/blob/b19e7dc/packages/valhalla/parameters.ts#L1107"},"packages/valhalla/parameters.ts:1107")))}u.isMDXComponent=!0}}]);