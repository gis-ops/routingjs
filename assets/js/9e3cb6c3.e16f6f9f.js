"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8769],{3905:(e,a,t)=>{t.d(a,{Zo:()=>d,kt:()=>h});var n=t(7294);function l(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function i(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function r(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?i(Object(t),!0).forEach((function(a){l(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function o(e,a){if(null==e)return{};var t,n,l=function(e,a){if(null==e)return{};var t,n,l={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],a.indexOf(t)>=0||(l[t]=e[t]);return l}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var s=n.createContext({}),p=function(e){var a=n.useContext(s),t=a;return e&&(t="function"==typeof e?e(a):r(r({},a),e)),t},d=function(e){var a=p(e.components);return n.createElement(s.Provider,{value:a},e.children)},u={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},c=n.forwardRef((function(e,a){var t=e.components,l=e.mdxType,i=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),c=p(t),h=l,m=c["".concat(s,".").concat(h)]||c[h]||u[h]||i;return t?n.createElement(m,r(r({ref:a},d),{},{components:t})):n.createElement(m,r({ref:a},d))}));function h(e,a){var t=arguments,l=a&&a.mdxType;if("string"==typeof e||l){var i=t.length,r=new Array(i);r[0]=c;var o={};for(var s in a)hasOwnProperty.call(a,s)&&(o[s]=a[s]);o.originalType=e,o.mdxType="string"==typeof e?e:l,r[1]=o;for(var p=2;p<i;p++)r[p]=t[p];return n.createElement.apply(null,r)}return n.createElement.apply(null,t)}c.displayName="MDXCreateElement"},3138:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>s,contentTitle:()=>r,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var n=t(7462),l=(t(7294),t(3905));const i={id:"valhalla.ValhallaRouteParams",title:"Interface: ValhallaRouteParams",sidebar_label:"ValhallaRouteParams",custom_edit_url:null},r=void 0,o={unversionedId:"api/interfaces/valhalla.ValhallaRouteParams",id:"api/interfaces/valhalla.ValhallaRouteParams",title:"Interface: ValhallaRouteParams",description:"valhalla.ValhallaRouteParams",source:"@site/docs/api/interfaces/valhalla.ValhallaRouteParams.md",sourceDirName:"api/interfaces",slug:"/api/interfaces/valhalla.ValhallaRouteParams",permalink:"/routingjs/docs/api/interfaces/valhalla.ValhallaRouteParams",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"valhalla.ValhallaRouteParams",title:"Interface: ValhallaRouteParams",sidebar_label:"ValhallaRouteParams",custom_edit_url:null},sidebar:"tutorialSidebar",previous:{title:"ValhallaMatrixResponse",permalink:"/routingjs/docs/api/interfaces/valhalla.ValhallaMatrixResponse"},next:{title:"ValhallaRouteResponse",permalink:"/routingjs/docs/api/interfaces/valhalla.ValhallaRouteResponse"}},s={},p=[{value:"Hierarchy",id:"hierarchy",level:2},{value:"Properties",id:"properties",level:2},{value:"alternates",id:"alternates",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"costing",id:"costing",level:3},{value:"Inherited from",id:"inherited-from",level:4},{value:"Defined in",id:"defined-in-1",level:4},{value:"costing_options",id:"costing_options",level:3},{value:"Inherited from",id:"inherited-from-1",level:4},{value:"Defined in",id:"defined-in-2",level:4},{value:"date_time",id:"date_time",level:3},{value:"Defined in",id:"defined-in-3",level:4},{value:"directions_options",id:"directions_options",level:3},{value:"Defined in",id:"defined-in-4",level:4},{value:"exclude_locations",id:"exclude_locations",level:3},{value:"Inherited from",id:"inherited-from-2",level:4},{value:"Defined in",id:"defined-in-5",level:4},{value:"exclude_polygons",id:"exclude_polygons",level:3},{value:"Inherited from",id:"inherited-from-3",level:4},{value:"Defined in",id:"defined-in-6",level:4},{value:"id",id:"id",level:3},{value:"Inherited from",id:"inherited-from-4",level:4},{value:"Defined in",id:"defined-in-7",level:4},{value:"linear_references",id:"linear_references",level:3},{value:"Defined in",id:"defined-in-8",level:4},{value:"locations",id:"locations",level:3},{value:"Defined in",id:"defined-in-9",level:4},{value:"narrative",id:"narrative",level:3},{value:"Defined in",id:"defined-in-10",level:4}],d={toc:p};function u(e){let{components:a,...t}=e;return(0,l.kt)("wrapper",(0,n.Z)({},d,t,{components:a,mdxType:"MDXLayout"}),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/routingjs/docs/api/modules/valhalla"},"valhalla"),".ValhallaRouteParams"),(0,l.kt)("p",null,"You specify locations as an ordered list of two or more locations within a JSON array.\nLocations are visited in the order specified."),(0,l.kt)("h2",{id:"hierarchy"},"Hierarchy"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"ValhallaRequestParams")),(0,l.kt)("p",{parentName:"li"},"\u21b3 ",(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"strong"},"ValhallaRouteParams"))))),(0,l.kt)("h2",{id:"properties"},"Properties"),(0,l.kt)("h3",{id:"alternates"},"alternates"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,l.kt)("strong",{parentName:"p"},"alternates"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"A number denoting how many alternate routes should be provided. There may be no alternates or\nless alternates than the user specifies. Alternates are not yet supported on multipoint\nroutes (that is, routes with more than 2 locations). They are also not supported on time\ndependent routes."),(0,l.kt)("h4",{id:"defined-in"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/gis-ops/routingjs/blob/b19e7dc/packages/valhalla/parameters.ts#L33"},"packages/valhalla/parameters.ts:33")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"costing"},"costing"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"costing"),": ",(0,l.kt)("a",{parentName:"p",href:"/routingjs/docs/api/modules/valhalla#valhallacostingtype"},(0,l.kt)("inlineCode",{parentName:"a"},"ValhallaCostingType"))),(0,l.kt)("p",null,"Valhalla's routing service uses dynamic, run-time costing to generate the route path. The route\nrequest must include the name of the costing model and can include optional parameters available\nfor the chosen costing model."),(0,l.kt)("h4",{id:"inherited-from"},"Inherited from"),(0,l.kt)("p",null,"ValhallaRequestParams.costing"),(0,l.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/gis-ops/routingjs/blob/b19e7dc/packages/valhalla/parameters.ts#L81"},"packages/valhalla/parameters.ts:81")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"costing_options"},"costing","_","options"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,l.kt)("strong",{parentName:"p"},"costing","_","options"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"ValhallaCostingOptTypes")),(0,l.kt)("p",null,"Costing methods can have several options that can be adjusted to develop the route path,\nas well as for estimating time along the path."),(0,l.kt)("h4",{id:"inherited-from-1"},"Inherited from"),(0,l.kt)("p",null,"ValhallaRequestParams.costing","_","options"),(0,l.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/gis-ops/routingjs/blob/b19e7dc/packages/valhalla/parameters.ts#L86"},"packages/valhalla/parameters.ts:86")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"date_time"},"date","_","time"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,l.kt)("strong",{parentName:"p"},"date","_","time"),": ",(0,l.kt)("a",{parentName:"p",href:"/routingjs/docs/api/interfaces/valhalla.ValhallaDateTime"},(0,l.kt)("inlineCode",{parentName:"a"},"ValhallaDateTime"))),(0,l.kt)("p",null,"This is the local date and time at the location."),(0,l.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/gis-ops/routingjs/blob/b19e7dc/packages/valhalla/parameters.ts#L37"},"packages/valhalla/parameters.ts:37")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"directions_options"},"directions","_","options"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,l.kt)("strong",{parentName:"p"},"directions","_","options"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"ValhallaDirectionsOptions")),(0,l.kt)("p",null,"Additional options specific to the ",(0,l.kt)("inlineCode",{parentName:"p"},"/route")," endpoint"),(0,l.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/gis-ops/routingjs/blob/b19e7dc/packages/valhalla/parameters.ts#L26"},"packages/valhalla/parameters.ts:26")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"exclude_locations"},"exclude","_","locations"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,l.kt)("strong",{parentName:"p"},"exclude","_","locations"),": ","[",(0,l.kt)("inlineCode",{parentName:"p"},"number"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"number"),"][]"),(0,l.kt)("p",null,"A set of locations to exclude or avoid within a route can be specified using a JSON array\nof avoid_locations. The avoid_locations have the same format as the locations list. At a\nminimum each avoid location must include latitude and longitude. The avoid_locations are\nmapped to the closest road or roads and these roads are excluded from the route path computation."),(0,l.kt)("h4",{id:"inherited-from-2"},"Inherited from"),(0,l.kt)("p",null,"ValhallaRequestParams.exclude","_","locations"),(0,l.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/gis-ops/routingjs/blob/b19e7dc/packages/valhalla/parameters.ts#L97"},"packages/valhalla/parameters.ts:97")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"exclude_polygons"},"exclude","_","polygons"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,l.kt)("strong",{parentName:"p"},"exclude","_","polygons"),": ","[",(0,l.kt)("inlineCode",{parentName:"p"},"number"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"number"),"][]","[] ","|"," ","[",(0,l.kt)("inlineCode",{parentName:"p"},"number"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"number"),"][]","[][]"),(0,l.kt)("p",null,"One or multiple exterior rings of polygons in the form of nested JSON arrays, e.g.\n[[","[lon1, lat1]",", ","[lon2,lat2]","],[","[lon1,lat1]",",","[lon2,lat2]","]]. Roads intersecting these rings\nwill be avoided during path finding. If you only need to avoid a few specific roads,\nit's much more efficient to use exclude_locations. Valhalla will close open rings (i.e.\ncopy the first coordingate to the last position)."),(0,l.kt)("h4",{id:"inherited-from-3"},"Inherited from"),(0,l.kt)("p",null,"ValhallaRequestParams.exclude","_","polygons"),(0,l.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/gis-ops/routingjs/blob/b19e7dc/packages/valhalla/parameters.ts#L105"},"packages/valhalla/parameters.ts:105")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"id"},"id"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,l.kt)("strong",{parentName:"p"},"id"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"string")),(0,l.kt)("p",null,"Name your route request. If id is specified, the naming will be sent thru to the response."),(0,l.kt)("h4",{id:"inherited-from-4"},"Inherited from"),(0,l.kt)("p",null,"ValhallaRequestParams.id"),(0,l.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/gis-ops/routingjs/blob/b19e7dc/packages/valhalla/parameters.ts#L90"},"packages/valhalla/parameters.ts:90")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"linear_references"},"linear","_","references"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,l.kt)("strong",{parentName:"p"},"linear","_","references"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"boolean")),(0,l.kt)("p",null,"When present and true, the successful route response will include a key linear_references.\nIts value is an array of base64-encoded OpenLR location references, one for each graph edge\nof the road network matched by the input trace."),(0,l.kt)("h4",{id:"defined-in-8"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/gis-ops/routingjs/blob/b19e7dc/packages/valhalla/parameters.ts#L43"},"packages/valhalla/parameters.ts:43")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"locations"},"locations"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"locations"),": ",(0,l.kt)("a",{parentName:"p",href:"/routingjs/docs/api/interfaces/valhalla.ValhallaLocation"},(0,l.kt)("inlineCode",{parentName:"a"},"ValhallaLocation")),"[]"),(0,l.kt)("p",null,"A location must include a latitude and longitude in decimal degrees. The coordinates can\ncome from many input sources, such as a GPS location, a point or a click on a map,\na geocoding service, and so on."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"strong"},"Remarks"))),(0,l.kt)("p",null,"Note that the Valhalla cannot search for names or addresses or perform geocoding or\nreverse geocoding."),(0,l.kt)("h4",{id:"defined-in-9"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/gis-ops/routingjs/blob/b19e7dc/packages/valhalla/parameters.ts#L17"},"packages/valhalla/parameters.ts:17")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"narrative"},"narrative"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,l.kt)("strong",{parentName:"p"},"narrative"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"boolean")),(0,l.kt)("p",null,"Whether or not narrative instructions should be returned for the route"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"strong"},"Default Value"))),(0,l.kt)("p",null,"Defaults to false."),(0,l.kt)("h4",{id:"defined-in-10"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/gis-ops/routingjs/blob/b19e7dc/packages/valhalla/parameters.ts#L24"},"packages/valhalla/parameters.ts:24")))}u.isMDXComponent=!0}}]);