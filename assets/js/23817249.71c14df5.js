"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6030],{3905:(e,a,t)=>{t.d(a,{Zo:()=>d,kt:()=>c});var n=t(7294);function l(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function i(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?i(Object(t),!0).forEach((function(a){l(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function r(e,a){if(null==e)return{};var t,n,l=function(e,a){if(null==e)return{};var t,n,l={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],a.indexOf(t)>=0||(l[t]=e[t]);return l}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var s=n.createContext({}),p=function(e){var a=n.useContext(s),t=a;return e&&(t="function"==typeof e?e(a):o(o({},a),e)),t},d=function(e){var a=p(e.components);return n.createElement(s.Provider,{value:a},e.children)},u={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},h=n.forwardRef((function(e,a){var t=e.components,l=e.mdxType,i=e.originalType,s=e.parentName,d=r(e,["components","mdxType","originalType","parentName"]),h=p(t),c=l,m=h["".concat(s,".").concat(c)]||h[c]||u[c]||i;return t?n.createElement(m,o(o({ref:a},d),{},{components:t})):n.createElement(m,o({ref:a},d))}));function c(e,a){var t=arguments,l=a&&a.mdxType;if("string"==typeof e||l){var i=t.length,o=new Array(i);o[0]=h;var r={};for(var s in a)hasOwnProperty.call(a,s)&&(r[s]=a[s]);r.originalType=e,r.mdxType="string"==typeof e?e:l,o[1]=r;for(var p=2;p<i;p++)o[p]=t[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}h.displayName="MDXCreateElement"},5940:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>r,toc:()=>p});var n=t(7462),l=(t(7294),t(3905));const i={id:"valhalla.ValhallaIsochroneParams",title:"Interface: ValhallaIsochroneParams",sidebar_label:"ValhallaIsochroneParams",custom_edit_url:null},o=void 0,r={unversionedId:"api/interfaces/valhalla.ValhallaIsochroneParams",id:"api/interfaces/valhalla.ValhallaIsochroneParams",title:"Interface: ValhallaIsochroneParams",description:"valhalla.ValhallaIsochroneParams",source:"@site/docs/api/interfaces/valhalla.ValhallaIsochroneParams.md",sourceDirName:"api/interfaces",slug:"/api/interfaces/valhalla.ValhallaIsochroneParams",permalink:"/routingjs/docs/api/interfaces/valhalla.ValhallaIsochroneParams",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"valhalla.ValhallaIsochroneParams",title:"Interface: ValhallaIsochroneParams",sidebar_label:"ValhallaIsochroneParams",custom_edit_url:null},sidebar:"tutorialSidebar",previous:{title:"ValhallaIsochroneOpts",permalink:"/routingjs/docs/api/interfaces/valhalla.ValhallaIsochroneOpts"},next:{title:"ValhallaIsochroneResponse",permalink:"/routingjs/docs/api/interfaces/valhalla.ValhallaIsochroneResponse"}},s={},p=[{value:"Hierarchy",id:"hierarchy",level:2},{value:"Properties",id:"properties",level:2},{value:"contours",id:"contours",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"costing",id:"costing",level:3},{value:"Inherited from",id:"inherited-from",level:4},{value:"Defined in",id:"defined-in-1",level:4},{value:"costing_options",id:"costing_options",level:3},{value:"Inherited from",id:"inherited-from-1",level:4},{value:"Defined in",id:"defined-in-2",level:4},{value:"date_time",id:"date_time",level:3},{value:"Defined in",id:"defined-in-3",level:4},{value:"denoise",id:"denoise",level:3},{value:"Defined in",id:"defined-in-4",level:4},{value:"exclude_locations",id:"exclude_locations",level:3},{value:"Inherited from",id:"inherited-from-2",level:4},{value:"Defined in",id:"defined-in-5",level:4},{value:"exclude_polygons",id:"exclude_polygons",level:3},{value:"Inherited from",id:"inherited-from-3",level:4},{value:"Defined in",id:"defined-in-6",level:4},{value:"generalize",id:"generalize",level:3},{value:"Defined in",id:"defined-in-7",level:4},{value:"id",id:"id",level:3},{value:"Inherited from",id:"inherited-from-4",level:4},{value:"Defined in",id:"defined-in-8",level:4},{value:"locations",id:"locations",level:3},{value:"Defined in",id:"defined-in-9",level:4},{value:"polygons",id:"polygons",level:3},{value:"Defined in",id:"defined-in-10",level:4},{value:"show_locations",id:"show_locations",level:3},{value:"Defined in",id:"defined-in-11",level:4}],d={toc:p};function u(e){let{components:a,...t}=e;return(0,l.kt)("wrapper",(0,n.Z)({},d,t,{components:a,mdxType:"MDXLayout"}),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/routingjs/docs/api/modules/valhalla"},"valhalla"),".ValhallaIsochroneParams"),(0,l.kt)("h2",{id:"hierarchy"},"Hierarchy"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"ValhallaRequestParams")),(0,l.kt)("p",{parentName:"li"},"\u21b3 ",(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"strong"},"ValhallaIsochroneParams"))))),(0,l.kt)("h2",{id:"properties"},"Properties"),(0,l.kt)("h3",{id:"contours"},"contours"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"contours"),": ",(0,l.kt)("a",{parentName:"p",href:"/routingjs/docs/api/interfaces/valhalla.ValhallaContours"},(0,l.kt)("inlineCode",{parentName:"a"},"ValhallaContours")),"[]"),(0,l.kt)("p",null,"A JSON array of contour objects with the time in minutes or distance in kilometers and\ncolor to use for each isochrone contour. You can specify up to four contours (by default)."),(0,l.kt)("h4",{id:"defined-in"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/gis-ops/routingjs/blob/b19e7dc/packages/valhalla/parameters.ts#L122"},"packages/valhalla/parameters.ts:122")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"costing"},"costing"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"costing"),": ",(0,l.kt)("a",{parentName:"p",href:"/routingjs/docs/api/modules/valhalla#valhallacostingtype"},(0,l.kt)("inlineCode",{parentName:"a"},"ValhallaCostingType"))),(0,l.kt)("p",null,"Valhalla's routing service uses dynamic, run-time costing to generate the route path. The route\nrequest must include the name of the costing model and can include optional parameters available\nfor the chosen costing model."),(0,l.kt)("h4",{id:"inherited-from"},"Inherited from"),(0,l.kt)("p",null,"ValhallaRequestParams.costing"),(0,l.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/gis-ops/routingjs/blob/b19e7dc/packages/valhalla/parameters.ts#L81"},"packages/valhalla/parameters.ts:81")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"costing_options"},"costing","_","options"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,l.kt)("strong",{parentName:"p"},"costing","_","options"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"ValhallaCostingOptTypes")),(0,l.kt)("p",null,"Costing methods can have several options that can be adjusted to develop the route path,\nas well as for estimating time along the path."),(0,l.kt)("h4",{id:"inherited-from-1"},"Inherited from"),(0,l.kt)("p",null,"ValhallaRequestParams.costing","_","options"),(0,l.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/gis-ops/routingjs/blob/b19e7dc/packages/valhalla/parameters.ts#L86"},"packages/valhalla/parameters.ts:86")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"date_time"},"date","_","time"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,l.kt)("strong",{parentName:"p"},"date","_","time"),": ",(0,l.kt)("a",{parentName:"p",href:"/routingjs/docs/api/interfaces/valhalla.ValhallaDateTime"},(0,l.kt)("inlineCode",{parentName:"a"},"ValhallaDateTime"))),(0,l.kt)("p",null,"The local date and time at the location. These parameters apply only for multimodal\nrequests and are not used with other costing methods."),(0,l.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/gis-ops/routingjs/blob/b19e7dc/packages/valhalla/parameters.ts#L117"},"packages/valhalla/parameters.ts:117")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"denoise"},"denoise"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,l.kt)("strong",{parentName:"p"},"denoise"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"A floating point value from 0 to 1 (default of 1) which can be used to remove smaller contours.\nA value of 1 will only return the largest contour for a given time value. A value of 0.5 drops\nany contours that are less than half the area of the largest contour in the set of contours for\nthat same time value."),(0,l.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/gis-ops/routingjs/blob/b19e7dc/packages/valhalla/parameters.ts#L137"},"packages/valhalla/parameters.ts:137")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"exclude_locations"},"exclude","_","locations"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,l.kt)("strong",{parentName:"p"},"exclude","_","locations"),": ","[",(0,l.kt)("inlineCode",{parentName:"p"},"number"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"number"),"][]"),(0,l.kt)("p",null,"A set of locations to exclude or avoid within a route can be specified using a JSON array\nof avoid_locations. The avoid_locations have the same format as the locations list. At a\nminimum each avoid location must include latitude and longitude. The avoid_locations are\nmapped to the closest road or roads and these roads are excluded from the route path computation."),(0,l.kt)("h4",{id:"inherited-from-2"},"Inherited from"),(0,l.kt)("p",null,"ValhallaRequestParams.exclude","_","locations"),(0,l.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/gis-ops/routingjs/blob/b19e7dc/packages/valhalla/parameters.ts#L97"},"packages/valhalla/parameters.ts:97")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"exclude_polygons"},"exclude","_","polygons"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,l.kt)("strong",{parentName:"p"},"exclude","_","polygons"),": ","[",(0,l.kt)("inlineCode",{parentName:"p"},"number"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"number"),"][]","[] ","|"," ","[",(0,l.kt)("inlineCode",{parentName:"p"},"number"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"number"),"][]","[][]"),(0,l.kt)("p",null,"One or multiple exterior rings of polygons in the form of nested JSON arrays, e.g.\n[[","[lon1, lat1]",", ","[lon2,lat2]","],[","[lon1,lat1]",",","[lon2,lat2]","]]. Roads intersecting these rings\nwill be avoided during path finding. If you only need to avoid a few specific roads,\nit's much more efficient to use exclude_locations. Valhalla will close open rings (i.e.\ncopy the first coordingate to the last position)."),(0,l.kt)("h4",{id:"inherited-from-3"},"Inherited from"),(0,l.kt)("p",null,"ValhallaRequestParams.exclude","_","polygons"),(0,l.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/gis-ops/routingjs/blob/b19e7dc/packages/valhalla/parameters.ts#L105"},"packages/valhalla/parameters.ts:105")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"generalize"},"generalize"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,l.kt)("strong",{parentName:"p"},"generalize"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"A floating point value in meters used as the tolerance for Douglas-Peucker generalization."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"strong"},"Remarks"))),(0,l.kt)("p",null,"Note: Generalization of contours can lead to self-intersections, as well as intersections of\nadjacent contours."),(0,l.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/gis-ops/routingjs/blob/b19e7dc/packages/valhalla/parameters.ts#L145"},"packages/valhalla/parameters.ts:145")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"id"},"id"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,l.kt)("strong",{parentName:"p"},"id"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"string")),(0,l.kt)("p",null,"Name your route request. If id is specified, the naming will be sent thru to the response."),(0,l.kt)("h4",{id:"inherited-from-4"},"Inherited from"),(0,l.kt)("p",null,"ValhallaRequestParams.id"),(0,l.kt)("h4",{id:"defined-in-8"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/gis-ops/routingjs/blob/b19e7dc/packages/valhalla/parameters.ts#L90"},"packages/valhalla/parameters.ts:90")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"locations"},"locations"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"locations"),": ",(0,l.kt)("a",{parentName:"p",href:"/routingjs/docs/api/interfaces/valhalla.ValhallaLocation"},(0,l.kt)("inlineCode",{parentName:"a"},"ValhallaLocation")),"[]"),(0,l.kt)("p",null,"Only single location can be specified."),(0,l.kt)("h4",{id:"defined-in-9"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/gis-ops/routingjs/blob/b19e7dc/packages/valhalla/parameters.ts#L112"},"packages/valhalla/parameters.ts:112")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"polygons"},"polygons"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,l.kt)("strong",{parentName:"p"},"polygons"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"boolean")),(0,l.kt)("p",null,"A Boolean value to determine whether to return geojson polygons or linestrings as the contours.\nThe default is false, which returns lines; when true, polygons are returned."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"strong"},"Remarks"))),(0,l.kt)("p",null,"When polygons is true, any contour that forms a ring is returned as a polygon."),(0,l.kt)("h4",{id:"defined-in-10"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/gis-ops/routingjs/blob/b19e7dc/packages/valhalla/parameters.ts#L130"},"packages/valhalla/parameters.ts:130")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"show_locations"},"show","_","locations"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,l.kt)("strong",{parentName:"p"},"show","_","locations"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"boolean")),(0,l.kt)("p",null,"A boolean indicating whether the input locations should be returned as MultiPoint features:\none feature for the exact input coordinates and one feature for the coordinates of the network\nnode it snapped to."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"strong"},"Default Value"))),(0,l.kt)("p",null,"Default false."),(0,l.kt)("h4",{id:"defined-in-11"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/gis-ops/routingjs/blob/b19e7dc/packages/valhalla/parameters.ts#L154"},"packages/valhalla/parameters.ts:154")))}u.isMDXComponent=!0}}]);